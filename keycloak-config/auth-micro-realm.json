{
  "id" : "70bb930f-ebda-4fda-b3f9-5ba216231c8e",
  "realm" : "auth-micro",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "bruteForceStrategy" : "MULTIPLE",
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "23f74d8a-99d1-4085-8c37-6d9e6a38d1f1",
      "name" : "default-roles-auth-micro",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "70bb930f-ebda-4fda-b3f9-5ba216231c8e",
      "attributes" : { }
    }, {
      "id" : "80d9552d-ef12-4fff-8c18-160196aef9c7",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "70bb930f-ebda-4fda-b3f9-5ba216231c8e",
      "attributes" : { }
    }, {
      "id" : "b8f77361-f831-4f5b-b3c7-0cfaf2b1e6e7",
      "name" : "internal",
      "description" : "Роль нужна для самих сервисов. По ней auth будет просить валидацию у networking",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "70bb930f-ebda-4fda-b3f9-5ba216231c8e",
      "attributes" : { }
    }, {
      "id" : "9dc98356-0ca1-4224-83d0-390388a63b2e",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "70bb930f-ebda-4fda-b3f9-5ba216231c8e",
      "attributes" : { }
    }, {
      "id" : "e308b1f1-5d32-435f-80b7-d825198d93d8",
      "name" : "admin",
      "description" : "У этой роли все права",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "70bb930f-ebda-4fda-b3f9-5ba216231c8e",
      "attributes" : { }
    }, {
      "id" : "a2657557-b982-4aeb-897c-0aca8d1e2ce0",
      "name" : "user",
      "description" : "Может регаться, логинться, обращаться к доступным API",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "70bb930f-ebda-4fda-b3f9-5ba216231c8e",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "fde7bf5a-1c53-4035-9b1b-ee8315705681",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "96f2e23c-fd12-4415-95d4-7ee9a454d457",
        "attributes" : { }
      }, {
        "id" : "43867cef-c8e5-4a47-a442-a504b0c070ae",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "view-users", "query-users", "manage-realm", "manage-users", "view-events", "manage-clients", "manage-identity-providers", "create-client", "view-clients", "view-realm", "impersonation", "query-clients", "query-realms", "manage-authorization", "view-identity-providers", "view-authorization", "manage-events" ]
          }
        },
        "clientRole" : true,
        "containerId" : "96f2e23c-fd12-4415-95d4-7ee9a454d457",
        "attributes" : { }
      }, {
        "id" : "4af3d0bd-86c6-4606-8322-818c3b0b1ec0",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "96f2e23c-fd12-4415-95d4-7ee9a454d457",
        "attributes" : { }
      }, {
        "id" : "1aff80e6-2dcb-4d63-ada8-c117b630d17e",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "96f2e23c-fd12-4415-95d4-7ee9a454d457",
        "attributes" : { }
      }, {
        "id" : "613417e5-92ab-49f9-ba46-88205a7c2b6b",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "96f2e23c-fd12-4415-95d4-7ee9a454d457",
        "attributes" : { }
      }, {
        "id" : "dc4ef441-74b5-4fe3-9678-33a013bff48e",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "96f2e23c-fd12-4415-95d4-7ee9a454d457",
        "attributes" : { }
      }, {
        "id" : "9e8231c3-489f-460c-b0c2-9105818e3252",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "96f2e23c-fd12-4415-95d4-7ee9a454d457",
        "attributes" : { }
      }, {
        "id" : "e087ff30-25a0-4e13-94db-2df2fdf38cda",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "96f2e23c-fd12-4415-95d4-7ee9a454d457",
        "attributes" : { }
      }, {
        "id" : "a725f240-98ea-4335-ac10-6407686feff0",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "96f2e23c-fd12-4415-95d4-7ee9a454d457",
        "attributes" : { }
      }, {
        "id" : "3eea18b2-2b76-4574-b8e6-b571392a4cf1",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "96f2e23c-fd12-4415-95d4-7ee9a454d457",
        "attributes" : { }
      }, {
        "id" : "70112041-e252-4c52-b01a-dbb60103a711",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "96f2e23c-fd12-4415-95d4-7ee9a454d457",
        "attributes" : { }
      }, {
        "id" : "c6f5a52e-f0a1-4e97-8f45-3b8ae78f24f7",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "96f2e23c-fd12-4415-95d4-7ee9a454d457",
        "attributes" : { }
      }, {
        "id" : "2cd99ea6-a668-4815-a39b-646f18268c81",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "96f2e23c-fd12-4415-95d4-7ee9a454d457",
        "attributes" : { }
      }, {
        "id" : "81889bab-2d4d-4aa5-add3-6df66b8f0434",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "96f2e23c-fd12-4415-95d4-7ee9a454d457",
        "attributes" : { }
      }, {
        "id" : "81bdbb8c-b49e-4990-ab79-88b92e63dff2",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "96f2e23c-fd12-4415-95d4-7ee9a454d457",
        "attributes" : { }
      }, {
        "id" : "e968bdc7-2504-4e8a-a91c-ae43ccde2bfc",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "96f2e23c-fd12-4415-95d4-7ee9a454d457",
        "attributes" : { }
      }, {
        "id" : "b0cfe52f-db2d-4bc1-a55b-5419a9496b01",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "96f2e23c-fd12-4415-95d4-7ee9a454d457",
        "attributes" : { }
      }, {
        "id" : "28bfe5e9-ec68-48a6-9ca7-728eacfb6a92",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "96f2e23c-fd12-4415-95d4-7ee9a454d457",
        "attributes" : { }
      }, {
        "id" : "0eab9ef4-3de6-4b2f-9af5-1b6457c86e95",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "96f2e23c-fd12-4415-95d4-7ee9a454d457",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "auth-micro" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "0cb37fd3-0cd5-4308-8a2f-b7b1f00e976d",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cb84126f-33de-4303-a6a2-3723c5d3ddd2",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "eb8bc7e3-329d-4f4b-88bf-856b12aed4c8",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "854d903b-33df-4331-8e95-be9b9cab2ddc",
        "attributes" : { }
      }, {
        "id" : "7c15d4ec-e924-4433-bd3f-104ec9b5f5ef",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "854d903b-33df-4331-8e95-be9b9cab2ddc",
        "attributes" : { }
      }, {
        "id" : "242879fb-27ce-4a94-adc5-2b820fa5ab0c",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "854d903b-33df-4331-8e95-be9b9cab2ddc",
        "attributes" : { }
      }, {
        "id" : "a3982792-6e4c-4b04-a56f-7a65d9a4b7d4",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "854d903b-33df-4331-8e95-be9b9cab2ddc",
        "attributes" : { }
      }, {
        "id" : "2194692a-33f1-407a-b07a-e7fc7c4bd42c",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "854d903b-33df-4331-8e95-be9b9cab2ddc",
        "attributes" : { }
      }, {
        "id" : "8a88163b-8373-4066-88fe-e848228b8195",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "854d903b-33df-4331-8e95-be9b9cab2ddc",
        "attributes" : { }
      }, {
        "id" : "53804e44-80c6-4510-b36f-554ab95c8189",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "854d903b-33df-4331-8e95-be9b9cab2ddc",
        "attributes" : { }
      }, {
        "id" : "c61a5d0e-8c5c-4415-84fc-ef3a80b7e982",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "854d903b-33df-4331-8e95-be9b9cab2ddc",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "23f74d8a-99d1-4085-8c37-6d9e6a38d1f1",
    "name" : "default-roles-auth-micro",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "70bb930f-ebda-4fda-b3f9-5ba216231c8e"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "users" : [ {
    "id" : "9ebb3218-3470-41c6-920b-1dc74f4bef2c",
    "username" : "admin",
    "firstName" : "admin",
    "lastName" : "admin",
    "email" : "admin@mail.ru",
    "emailVerified" : true,
    "createdTimestamp" : 1753283439039,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-auth-micro" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "8182bb18-d88c-4e9f-8068-75e2f956115b",
    "username" : "internal",
    "firstName" : "internal",
    "lastName" : "internal",
    "email" : "internal@system.local",
    "emailVerified" : true,
    "createdTimestamp" : 1753283520420,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-auth-micro" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "0a5dda24-08ee-4094-97d8-f338c21e4577",
    "username" : "testuser",
    "firstName" : "testUser",
    "lastName" : "testUser",
    "email" : "testuser@mail.ru",
    "emailVerified" : true,
    "createdTimestamp" : 1753283457853,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-auth-micro" ],
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "854d903b-33df-4331-8e95-be9b9cab2ddc",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/auth-micro/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/auth-micro/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "d65eccc5-bbd6-49b6-bdea-4b6853ee94e0",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/auth-micro/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/auth-micro/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "ace65ac6-639f-4d83-a5d9-81c348a9912b",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "3f588399-c523-40c9-a703-7b9b33e4324c",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "b7ed4d91-b646-47a4-a322-6b440cab7707",
    "clientId" : "auth-micro",
    "name" : "auth-micro",
    "description" : "Клиент авторизации/аутентификации",
    "rootUrl" : "http://localhost:8180",
    "adminUrl" : "http://localhost:8180",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "HBQe0ZgLaAwYTQX8X9SPpcOexXYv94ab",
    "redirectUris" : [ "http://localhost:*" ],
    "webOrigins" : [ "http://localhost:*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1753284306",
      "backchannel.logout.session.required" : "true",
      "standard.token.exchange.enabled" : "false",
      "post.logout.redirect.uris" : "http://localhost:*",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "cb84126f-33de-4303-a6a2-3723c5d3ddd2",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "96f2e23c-fd12-4415-95d4-7ee9a454d457",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "e68f76e7-5238-45a4-a104-8443ce365ff8",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/auth-micro/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/auth-micro/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "9d744042-7fe9-4475-8fff-990ddccbd8be",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "1967ee7c-ef7b-4d7c-9148-3492981d2c82",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${profileScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "3028352d-d7c1-4a89-bdd5-416a44a5d591",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "45f873fd-e7e4-47ed-9fef-3f25de383093",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c022ed0b-ffe8-4a6b-b3e3-6d37acea77e0",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "4a746c2e-7b2a-437b-b9e6-7d140b1ccade",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "622fd2f8-d933-4192-a59f-c65767f28be4",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1d736ed0-4186-4819-b308-0057d65e55d8",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5a270484-4557-476f-806c-4fe23f03cdb5",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "605fb7f0-01c1-4635-877b-584fe63c34de",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "84180c86-f4bc-4664-8de8-d023da977af9",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "60dd697c-879f-443c-8d7d-acc7e28c3cca",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "2b27c5c5-d6fa-4b4a-9bfe-f711a4aaf00f",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f87cd751-0109-4955-b072-fac800f1bd65",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "2e5a7ea5-61c6-4778-9638-7c73428b89ae",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "2b3ded03-e2bd-442d-9ab2-7e4c65d4a33d",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "6f955ab4-a952-4f2f-9841-3deeb8e5e3f8",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${emailScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "bef66ee7-0891-4b3b-a7d1-786c061dcaff",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "eab87955-6641-42be-aaa8-1a3d0d0a9138",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "2434742a-6369-42d8-9b86-e249bb472f04",
    "name" : "service_account",
    "description" : "Specific scope for a client enabled for service accounts",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "8e70a4a3-5774-48b9-9835-413f3790739d",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7243b61b-8c6e-473b-a72d-87e963235239",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a6a4f5e0-d82d-4027-b36f-632518088b91",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "c46e7a95-4b4f-44b6-a453-aafb81f84d56",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "0245636a-b8c2-4956-9837-2ce75fafe893",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "4bfbbc5e-76f2-46d9-96af-645fcf5421e3",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "${rolesScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "4abc36f2-ee47-4273-8c6d-9423e61fb379",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "b6e2806e-99b1-4c1c-a920-88e52957113c",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "3be0970e-0d00-4c91-85b6-5d861f636f1a",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "d91d1b27-bf66-4f53-a6de-f6a0a7bab019",
    "name" : "organization",
    "description" : "Additional claims about the organization a subject belongs to",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${organizationScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "ca97bacd-80af-4c93-a252-376739c3cdc0",
      "name" : "organization",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-organization-membership-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "organization",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "06ea2bb1-c398-4d65-8bf9-9e8fc6d9cf29",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "b5b3c2c9-9de0-4295-8ba3-cc3d234e4953",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "ee03d158-2a7a-4d24-a753-1015d3135f0b",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "29c46f3b-1ce4-4c02-8c82-864f07b3a415",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "35a0c257-3540-4d04-bac4-002c0b78ba2d",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "230ba958-4493-4e96-90f1-b949d1c88865",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "43356b32-e1bc-4277-9864-ed58e0885f5c",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "ee07c999-d0c5-4560-a5ea-938f58d18927",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "875af4cd-44e3-430c-a50b-6b53207cc50a",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "ea5668f4-cf29-4cbd-8a1d-d464466cb0ff",
    "name" : "basic",
    "description" : "OpenID Connect scope for add all basic claims to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "1ff5cfb5-1cba-4780-a256-63577887c4bd",
      "name" : "sub",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-sub-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "d90fb66e-01b0-4f93-affd-e12b11fa3415",
      "name" : "auth_time",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "AUTH_TIME",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "auth_time",
        "jsonType.label" : "long"
      }
    } ]
  }, {
    "id" : "a63dd1f8-4b32-42cc-9744-ac7aff7649b2",
    "name" : "saml_organization",
    "description" : "Organization Membership",
    "protocol" : "saml",
    "attributes" : {
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "a9ca3e52-7a87-4ffa-983a-f1c4f9760089",
      "name" : "organization",
      "protocol" : "saml",
      "protocolMapper" : "saml-organization-membership-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "789254e5-e226-4c20-a1a2-88bd7bf86d83",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "6c6f2699-64a0-4533-8925-93ffac317e8a",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "b190de8a-2469-49e6-ad2e-f1ee7cd13832",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${addressScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "88137330-a94e-4fc9-ba18-ccbe3287b8c4",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "saml_organization", "profile", "email", "roles", "web-origins", "acr", "basic" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt", "organization" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "7730a1c7-b4e9-4d2e-a086-d310201abf73",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "7d7a232a-5f49-48e0-bd75-a6d84a9f6787",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "9bbf7e37-60c2-444e-b9b9-e28f6bebd966",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-role-list-mapper", "saml-user-attribute-mapper", "oidc-usermodel-property-mapper", "oidc-address-mapper", "oidc-full-name-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-user-property-mapper", "oidc-usermodel-attribute-mapper" ]
      }
    }, {
      "id" : "4bf759d1-2c4f-4dba-84c8-9eeb4698054b",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "2fc4c3db-01fd-44b4-a647-f1136b6a2721",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "6fef7069-a5ec-4175-95b1-9d5a0d80078f",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "5bd869d2-987f-4527-b2ab-0e2d4fefee89",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "8b3b7f8e-c743-4e84-9848-12f7b4ad1d00",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-property-mapper", "oidc-full-name-mapper", "oidc-address-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper", "saml-user-attribute-mapper", "oidc-usermodel-attribute-mapper", "saml-user-property-mapper" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "a48176d9-c903-4740-9215-a32a3efadad8",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "354baba8-3bd0-448e-9919-3ec89a4a4cc7" ],
        "secret" : [ "wubpi80jDFbM3I6IzEhpfg" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "35ed95ad-7681-4b57-a854-795c87886521",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEAyTatD/bJ4caDbLdooLwhrPOChDo+fk3GST3vFdgVns1j9lChjDLWn774Thew9V9izTj0LvNiBcNOVH8JfrQ+xdAyOeScfE7i2UCxTYHMl5LoS0+gT9aY0q2YZLDj9c3kZlOc+Qr+2Yy4YOmo5s51acitdj5oztC6qG13EtK7pe9/MA6d9JK5q3UjwOsEe+1PUDUduHZ+bQUX+VHiq6KVlg3ORgTIJNu0uFWQBcLrPQbrJsWKeLfUnepbfHjYIvU8MT48YrLyzD/y9rmM+yMOwti0xmf64GHZWMjv2yQ7elfB60GGZNz1wMHiXrmkMa/N9k1jJmOG8If8efGRNN01hQIDAQABAoIBAA1bZlCletBUi7vnTvhAlOG0xoi9jxF2Wz/YbysdjY3dp5Gd16OFam7vT+9rLjGTs+zYp4kIWgz04pnEVx6Em5gpEnR6YxLzb6apXzu8bpbvRyFct1Eldz6hDHk+rttN4CgUy9pSawmJCGJSkIZF1VCA5FbxnKaB/6oXnixvNcq1habENT2QpPx7d7560C0ihPttO3dyVEUpNDFQKJgGqzLZv17bggGpDFMXnsjDVYZ5pgUII5KMWbqlAVOkr4VofphdesE1a6rPyVkeoFszECN2iCWrABK6/klWSXd4RigtRxswx3jkGH36zEqwusgUTbFXmM0pAdkCBs9INQuVNy8CgYEA8FtClghZTFG3NL15izLtIaC0GbaLoZxb6zGqTLj1HfiDfwlbCoEWlkEBdRX7plIcaqyWCcYUctSoNOlv6NBGeIjifDW2hi/YfjUHObl+c7RwlKZICBOVLitn913uCpeDjDxkCdD8gDvkyk/sGNMHGKSIUYi8uNHHvYbXlcaKYl8CgYEA1k861VwfYsBPNKh/LNmglG4WIdSttgmfiHyqvUYw4bWrXeIFdPUtXJjQXHdRcmpF8gkFAuh8Hej9qH4lBenZ/CBlN60qvdxPrHy7rsxXtNQNlnph7XYHxrnku8bPpe3lOnOHJzb1WwFjtm/GuF36MOICI+awIaXkpspwfiKqGpsCgYEAwy04OuD4spLAtKEP68sk6GO5HBAx/sAbnDcuVTL0SKwfC6+rMDJ3BvgumMeLHBodXTpcc/9XZ4/sL1tINsO6FfMCB18OopSDtqiU/3jziD2EFhGY+IX+ZAl3WVX7ELrMZbo8egQspmz8cpTH4birUIV69MqWhXZEPlEbC1K32P0CgYAjPPPXkUY33pcneW0v2rjkrxVEisvlWr+4mYcZiCkRc+WxkjCDgqzqxNW93oCt53uIyKLiT4fZAy5yPguoZUNKiaka9oZIoakYG4pgu4jQWu3BCG6BtR6iNn69wXrzNaKzcbuPXyIIzLmwjcCHICy7TO49KPldDwIBytekZd7CcQKBgQCE52WtPiK2SoTNOlqWEg5Oakdb4VGMVuKGr6uOJ6fjXEK8y0btk4L1Ty6uMKeLo3R1yO6LObcsZ7aJEAoJ+s+AgrVBW9ZNH6RzH6K0F+FbctrfAmnshugog4rruAyj6eKQZx/AhPKoPC+GgfTpGfYPtMaNlGOJM3GPeWE+SY9C8g==" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICozCCAYsCBgGYN89TjTANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDAphdXRoLW1pY3JvMB4XDTI1MDcyMzE1MDEzMFoXDTM1MDcyMzE1MDMxMFowFTETMBEGA1UEAwwKYXV0aC1taWNybzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMk2rQ/2yeHGg2y3aKC8IazzgoQ6Pn5Nxkk97xXYFZ7NY/ZQoYwy1p+++E4XsPVfYs049C7zYgXDTlR/CX60PsXQMjnknHxO4tlAsU2BzJeS6EtPoE/WmNKtmGSw4/XN5GZTnPkK/tmMuGDpqObOdWnIrXY+aM7QuqhtdxLSu6XvfzAOnfSSuat1I8DrBHvtT1A1Hbh2fm0FF/lR4quilZYNzkYEyCTbtLhVkAXC6z0G6ybFini31J3qW3x42CL1PDE+PGKy8sw/8va5jPsjDsLYtMZn+uBh2VjI79skO3pXwetBhmTc9cDB4l65pDGvzfZNYyZjhvCH/HnxkTTdNYUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAk/4uaCWKvJV7JZLE+I4A1FTRw9QN93jzbu919hcUU+t83lJHtYYTNzHeFmhmbGlvuC9tJlLLhcH7EhAAtHQuMxlsswmvc+bZ3vbPVU9BXypXyc0dxyUlewCAxZUms7jwcN2q/+8fhGinnTuAfZLsZnjst8KKvCD9x3ZMx9bzft1tkABdX1lxl1qBDJFmXyutBBxAhj69wwEjjRyFyCDBvxku02USlM3fB+LXcxOknPc0uAaclt2XoKqbvBYW4FRWRWHdZXISkjjWVdTz9plUpu6slm3r2entaQYDJnYmzobW75lsidQZB9Kfo/lJMXUouDRqWGvMId8JXyCNqY6DhA==" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "1b1aeae7-7fa8-4366-8a15-ca3184ac48bc",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEAxpgYmtlPFmzNAdlNFIfznGhqvI0gF4HfKvsoFZ0NAAPxDogI4y/NrYXRH4DcIDnRMaD8gmVL53jAl9a/FGSkrIpKe1RR1KZn4f/SNu3839wrWJk7Ib4DxXNOd5QMe0r6tj8vIE+yO7JkDc/DtfbB9rVBIeKtc1Ni6rmg0Y9e10GNjUvKzqJuaF4QwZJ7Uqm/FcIINcnSnwXH1d0bExFd/92SKaH0dkre2qJYSChas9nD+T4jtlDqIeW7+hSZ3a2h9iWakW7am+2oTxF1e14etlH4ulZf1xcUCchGTv++TClQFtR0pBy3WnZ0L4LBw0K1KdJJe3WrVgravldxabknGwIDAQABAoIBACRpXpmFnmqOKEhefzN0ecYDnw5TEb89oJ1Qz1inIusNzfTMHFULPrrB/kW4aqO99g0TZzjBOdmG2kj8pqwmh8ra0C0smJRUrldRgElx+RtSUuA7uAvHuwlIyupBysgQR0eC7jEOa69mVdHydf+27nk9YmPEG+k5MLm4rzO9BbaRi6OXCkouH75IrIHx0JKTy7B2L7viMBW0RwRFYTW/Gwh4fAGZBKu0pCFvVbLhC0bo+n/pC8hvXCL//9/1IU6CoPzaFCJJPsehiFKSKYQsLKpsBEjL5LtYatIhHrrqx/O+8HpVgO5GTPdudB8vtl50932sTLp4aSF7jFl2EDpB+AECgYEA4pjmS/Wg1fvfnuaTGJBoDwgI7JXKHpz8ZiM8Ok1zDtPjTeZlmdz0iZqtb2ewO4uPPkTii6ec0EcD4mjRl7pGPUvd3corzrHDtZI8MezF9WDCiBmLVGJYq5LhaH3y9IXu5VJXXAOsqdAnwylk0C1Z1BGBYBrJxJcoduIHyk4dIVsCgYEA4Fz9O1PiXS/6orc9toV8sllbs/Qnq//mAAY4c8toF8m6xI8lCmRNeUDnzeZ2HZ/ZUgrdj4EAXEauqCQS6uGHyZOL5GXTjnPfS/XgmKRKFRTzAQ7kqc96cRpE7kNh8l7LipzRvCsFdY5+2aOFc9cd7f381XZg1M8lluK8hw7zPUECgYB/qp22FkHzzeED6ezeXh4CuggtI4epD9G0yg1Y2+IDbKYYccK0maS9EoS8y7KjGdIuxyjMfjb/scMigOP1lGGWj3QFTa642bbmSenYRwqRYV64x4uUk4RZxntxH+UOl5ctZOMLWJajZj/A2UWPdL2zmdlGiFE9jdyifl7dQH1xGQKBgQCHq/N9grYpf6/h4UiyLHpBJwPrB8NNoQqmDRzp+KBTcis8XQsbA5hNsE/8FFZsh5LUp7le47UiF6PaDSZbXlHMNSqszF5nj+4BcweDhiU+JlLj2uuvO8Vgy2/PXHPIKkaO5VF2pdVBRw+x783tRLHWjnXrZxAa38BtQ2KZkRLJgQKBgDz6UqgY2VDQ8xLmGWtT2q+zrzfZDWUQAhLtQ/MdiubBNQeAyi3JK0R9g5+IPNkUeW7gCrCd5yoWgnuzo5nu2CaQCEXaUnnlWVhZIfPrwlTF3ffaKJx4Hx/NgLo9TqKfwGWrB4uZq4CRyTXg9klZWMWYagf66jeRaFJGksIBYU5W" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICozCCAYsCBgGYN89SdTANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDAphdXRoLW1pY3JvMB4XDTI1MDcyMzE1MDEzMFoXDTM1MDcyMzE1MDMxMFowFTETMBEGA1UEAwwKYXV0aC1taWNybzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMaYGJrZTxZszQHZTRSH85xoaryNIBeB3yr7KBWdDQAD8Q6ICOMvza2F0R+A3CA50TGg/IJlS+d4wJfWvxRkpKyKSntUUdSmZ+H/0jbt/N/cK1iZOyG+A8VzTneUDHtK+rY/LyBPsjuyZA3Pw7X2wfa1QSHirXNTYuq5oNGPXtdBjY1Lys6ibmheEMGSe1KpvxXCCDXJ0p8Fx9XdGxMRXf/dkimh9HZK3tqiWEgoWrPZw/k+I7ZQ6iHlu/oUmd2tofYlmpFu2pvtqE8RdXteHrZR+LpWX9cXFAnIRk7/vkwpUBbUdKQct1p2dC+CwcNCtSnSSXt1q1YK2r5XcWm5JxsCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAJ5pYGVeaIOmxhOEYU/GR04NxwECkZmrGiQdG1z7D6Dj6EVBac07Jxd/qfZ1m8VvnGOxAQucTWfwz1sYxBOV1Byr+gTDqbSfXMANSLHLXopX79C9+dOcxpDmYZY1bSQmNFuxuzVvuvG8DqbvFwTCJ6RNsQC1fQY/3m4ZQO1GcLPhVQwhDFdkrYMaU/7bLvdLP4mFM2EdGfcl+sgxyx5kosJOQlb0myUb5LXbxjhiKQwngwGHJHlbJ9/RZBzNzXH7Jwfmx6pmhyKyBRMcDtc5HtoCYpmJCLx/rDE3KU/XqhHuNkICzIW8QdLpLnLeso3IsKQMVqve4gkbwmZ6DypzgrA==" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "f31e1c6f-cfd8-481c-9666-4d09e3faeb51",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "c8bd6316-c240-4aff-848c-e31f5c815a30" ],
        "secret" : [ "o_JVJnCQFRVvz3rmvSdjtFOFoOSX3Ko1NF-vTOHAerk6HPblGFLD8NZ3ixxyxe2q2Uc-B5gY7BabSSYJZV1zyBoNG1OeIp06DDp1-VfCk40ky-zZoJRCDPaxXZxtK4IiMwIJxqb4mP8-oPAENcEFlaLnhOauLNYKSq7eyq0adEY" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "728a6cdb-515c-402f-a980-d405e4123ac6",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "35893948-3126-4476-854e-cfca5f949f12",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e0591a57-b0c1-49ca-8f86-2471a32d86b4",
    "alias" : "Browser - Conditional Organization",
    "description" : "Flow to determine if the organization identity-first login is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "organization",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1056d4de-19d3-4530-be55-6f45dd3d1a03",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ee8afadf-b0f9-4477-a61f-e91b9aa7858a",
    "alias" : "First Broker Login - Conditional Organization",
    "description" : "Flow to determine if the authenticator that adds organization members is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "idp-add-organization-member",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "924f7aae-5c05-4cf0-bf03-3a66d5c9a3e5",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d57ee7f9-8b78-4b38-8731-cc1fe7912369",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "626b9fba-6f50-4a9e-bc26-ab4a846cd1ac",
    "alias" : "Organization",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "2791b492-59d3-4f33-8b95-6703d4c80ae3",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9e1d47ef-971f-46d5-9f87-e41da705d9e6",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4d6de332-d9d9-4444-9044-f78b9df8a4f1",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "cd118d78-e13c-4cc9-b9e3-a6e759750b6b",
    "alias" : "browser",
    "description" : "Browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 26,
      "autheticatorFlow" : true,
      "flowAlias" : "Organization",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0ec4dd85-3298-4ceb-ad5a-dd4504d08b3a",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e4dc9687-0dfb-4bcc-a47b-a8d00ceea998",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "208bb0cf-8041-4fa2-af4e-cc53e4317031",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1282fbe0-ff74-4304-a41f-f8dc80bad0ab",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 50,
      "autheticatorFlow" : true,
      "flowAlias" : "First Broker Login - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "afe46a31-9e8e-4ff6-b01e-180eca54e247",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "300e4a30-9866-419b-b81d-c09b01794698",
    "alias" : "registration",
    "description" : "Registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "8c298906-7f2c-4373-a7fe-cb5ff6c08498",
    "alias" : "registration form",
    "description" : "Registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-terms-and-conditions",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 70,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "36d78385-f60e-4660-be0e-a23471d36199",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "70575f1d-3247-42a9-82e4-556e552b99b5",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "d14cd2b2-9893-4b05-85c0-4691c6329984",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "b56dc734-4180-4040-875a-bea3315a877a",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "VERIFY_PROFILE",
    "name" : "Verify Profile",
    "providerId" : "VERIFY_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 90,
    "config" : { }
  }, {
    "alias" : "delete_credential",
    "name" : "Delete Credential",
    "providerId" : "delete_credential",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 100,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "oauth2DevicePollingInterval" : "5",
    "parRequestUriLifespan" : "60",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false"
  },
  "keycloakVersion" : "26.2.5",
  "userManagedAccessAllowed" : false,
  "organizationsEnabled" : false,
  "verifiableCredentialsEnabled" : false,
  "adminPermissionsEnabled" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}